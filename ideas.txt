$categories = factory('App\Category',5)->create()

factory('App\Category',3)->create()->each(function ($category) {factory('App\SubCategory',3)->create(['category_id'=>$category->id]); });



@section("SEO")
    <meta name="description" content="{{ $program->brief }}">
    <meta property=”og:type” content=”product”/>
    <meta property=”og:title” content=”{{ $program->name }}”/>
    <meta property=”og:description” content=”{{ $program->brief }}”/>
    <meta property=”og:image” content=”{{ $program->mainImage->smallUrl }}”/>
    <meta property=”og:url” content=”{{ $program->url }}”/>
    <meta property=”og:site_name” content=”{{ __("Travilio") }}”/>
@endsection

    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-select@1.13.9/dist/css/bootstrap-select.min.css">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-fileinput/4.4.7/css/fileinput.css" media="all" rel="stylesheet" type="text/css"/>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/tempusdominus-bootstrap-4/5.0.1/css/tempusdominus-bootstrap-4.min.css" />
    <script src="https://cdn.jsdelivr.net/npm/bootstrap-select@1.13.9/dist/js/bootstrap-select.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-fileinput/4.4.7/js/fileinput.js" type="text/javascript"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-fileinput/4.4.7/themes/fa/theme.js" type="text/javascript"></script>
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.22.2/moment.min.js"></script>
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/tempusdominus-bootstrap-4/5.0.1/js/tempusdominus-bootstrap-4.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.12.1/jquery-ui.min.js" integrity="sha256-KM512VNnjElC30ehFwehXjx1YCHPiQkOPmqnrWtpccM=" crossorigin="anonymous"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.12.1/jquery-ui.min.css" integrity="sha256-rByPlHULObEjJ6XQxW/flG2r+22R5dKiAoef+aXWfik=" crossorigin="anonymous" />

php artisan queue:work --queue=high,medium,low,default

        start_measure('render','Time for rendering');
        stop_measure('render');

./certbot-auto certonly --webroot -w /home/gpuadmin/html/public  -d *.gpushop.xyz -d gpushop.xyz --non-interactive --agree-tos --email muhamed.gamal9876@gmail.com
./certbot-auto certonly --webroot -w /home/gpuadmin/html/public  -d sellers.gpushop.xyz --non-interactive --agree-tos --email muhamed.gamal9876@gmail.com


./certbot-auto certonly --webroot -w /home/gpuadmin/html/public  -d *.gpushop.xyz -d gpushop.xyz  --non-interactive --agree-tos --email muhamed.gamal9876@gmail.com --force-renew

./certbot-auto certonly -a manual --preferred-challenges dns-d '*.gpushop.xyz' -d gpushop.xyz --server https://acme-v02.api.letsencrypt.org/directory


./certbot-auto --server https://acme-v02.api.letsencrypt.org/directory --manual --preferred-challenges dns  --installer nginx -d *.gpushop.xyz --email muhamed.gamal9876@gmail.com --force-renew


./certbot-auto --expand -d gpushop.xyz -d sellers.gpushop.xyz -d www.gpushop.xyz 

./certbot-auto --expand -d gpushop.xyz -d sellers.gpushop.xyz -d www.gpushop.xyz


gpuadmin@localhost:~$ sudo supervisorctl reread
queue-worker: available
gpuadmin@localhost:~$ sudo supervisorctl update
queue-worker: added process group
gpuadmin@localhost:~$ sudo supervisorctl reload
Restarted supervisord
gpuadmin@localhost:~$ sudo service supervisor restart
gpuadmin@localhost:~$


nginx -c /etc/nginx/nginx.conf -t





##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# In most cases, administrators will remove this file from sites-enabled/ and
# leave it as reference inside of sites-available where it will continue to be
# updated by the nginx packaging team.
#
# This file will automatically load configuration files provided by other
# applications, such as Drupal or Wordpress. These applications will be made
# available underneath a path with that package name, such as /drupal8.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration
#


server {
        listen 80 default_server;
        listen [::]:80 default_server;
        listen 443 ssl default_server;
        listen [::]:443 ssl default_server;

        server_name .gpushop.xyz;
 #   ssl_certificate /etc/letsencrypt/live/sellers.gpushop.xyz-0001/fullchain.pem; # managed by Certbot
#    ssl_certificate_key /etc/letsencrypt/live/sellers.gpushop.xyz-0001/privkey.pem; # managed by Certbot



#        ssl_certificate      /etc/letsencrypt/live/sellers.gpushop.xyz-0002/fullchain.pem;
#        ssl_certificate_key  /etc/letsencrypt/live/sellers.gpushop.xyz-0002/privkey.pem;

        # SSL configuration
        #
        # listen 443 ssl default_server;
        # listen [::]:443 ssl default_server;
        #
        # Note: You should disable gzip for SSL traffic.
        # See: https://bugs.debian.org/773332
        #
        # Read up on ssl_ciphers to ensure a secure configuration.
        # See: https://bugs.debian.org/765782
        #
        # Self signed certs generated by the ssl-cert package
        # Don't use them in a production server!
        #
        # include snippets/snakeoil.conf;

        root "/home/gpuadmin/html/public";

        # Add index.php to the list if you are using PHP
        index index.html index.htm index.php;

        charset utf-8;

        location ~* \.(jpg|jpeg|png|gif|ico|css|js)$ {
                expires 365d;
        }


        location / {
                # First attempt to serve request as file, then
                # as directory, then fall back to displaying
                try_files $uri $uri/ /index.php?$query_string;

        }

        error_log  /var/log/nginx/gpu-shop-error.log error;


        # pass PHP scripts to FastCGI server
        #
        location ~ \.php$ {
        #       include snippets/fastcgi-php.conf;
        #
        #       # With php-fpm (or other unix sockets):
        #       fastcgi_pass unix:/var/run/php/php7.3-fpm.sock;
        #       # With php-cgi (or other tcp sockets):
        #       fastcgi_pass 127.0.0.1:9000;


        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass unix:/var/run/php/php7.3-fpm.sock;
        fastcgi_index index.php;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;

        }

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #       deny all;
        #}
        #

}



# Virtual Host configuration for example.com
#
# You can move that to a different file under sites-available/ and symlink that
# to sites-enabled/ to enable it.
#
#server {
#       listen 80;
#       listen [::]:80;
#
#       server_name example.com;
#
#       root /var/www/example.com;
#       index index.html;
#
#       location / {
#               try_files $uri $uri/ =404;
#       }
#}
